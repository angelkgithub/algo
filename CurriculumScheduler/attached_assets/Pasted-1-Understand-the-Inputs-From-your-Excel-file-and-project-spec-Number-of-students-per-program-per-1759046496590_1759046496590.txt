1. Understand the Inputs

From your Excel file and project spec:

Number of students per program per year (e.g., BSIT1 = 190 students).

Courses list (with type: pure lecture or lecture+lab, and units/hours).

Rooms list (lecture or lab, available Mon–Sat, 7:00 AM – 9:00 PM).

Faculty (part-time or full-time, available hours).

2. Generate Sections

Divide students into sections of 12–40 students.

Example: 190 BSIT1 students → BSIT1A, BSIT1B, BSIT1C, BSIT1D, BSIT1E.

Each section will need its own schedule.

3. Define Scheduling Rules

Pure Lecture courses:

Either 2 hrs × 2 days (Mon–Thu, Tue–Fri, Wed–Sat)

Or 4 hrs straight once a week.

Lecture+Lab courses:

Lecture: 2h40m once a week or 1h20m × 2 days (Mon–Thu).

Lab: 4 hrs once a week or 2 hrs × 2 days.

Faculty Load:

Full-time: ≥24 hrs/week, 5 days.

Part-time: ≤18 hrs/week, restricted availability.

4. Algorithm Design

You’ll need a scheduling algorithm. Suggested approaches:

Greedy Algorithm (baseline, as per your spec):

Assign rooms and time slots in order, trying to fit courses section by section.

Quick but may produce conflicts.

Backtracking / Constraint Satisfaction (better):

Try to place a course, if conflict → backtrack and try another slot.

Graph Coloring approach:

Treat time slots/rooms as “colors” and assign them to course nodes.

5. Process Flow

Input number of students per program → generate sections.

Upload courses list → mark type (lec or lec+lab).

Upload rooms → tag as lecture or lab.

Input faculty availability and load.

Algorithm assigns schedules (Course × Section → Day × Time × Room × Faculty).

Output schedule in table form.

Example Output:

Course	Section	Day(s)	Time	Room	Type	Faculty
CCALCOML	BSIT1A	Mon–Thu	7–8:20 AM	Room204	Lec	Prof. A
CCALCOML	BSIT1A	Mon–Thu	9–11 AM	ComLab6	Lab	Prof. B
6. Implementation

Data Storage: use your Excel file as input, or convert to CSV/JSON.

Programming Language: Python, Java, or C++ are common.

Libraries (if Python):

pandas for Excel input/output.

ortools (Google OR-Tools) for scheduling/constraint solving.

openpyxl to write schedules back into Excel.